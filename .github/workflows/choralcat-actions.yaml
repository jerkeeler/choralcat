name: ChoralCat CI/CD
on: [push]
env:
  DEBUG: 'True'
jobs:
  test:
    runs-on: ubuntu-20.04
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.10.2
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: 14.x
          cache: 'npm'
      - name: Install dependencies
        run: make install
      - name: Build static files
        run: make build
      - name: Run tests
        run: make test
      - name: Bundle static files
        run: tar -cvf staticfiles.tar staticfiles/
      - name: Store static files
        uses: actions/upload-artifact@v2
        with:
          name: staticfiles
          path: staticfiles.tar
  deploy:
    needs: test
    if: github.ref == 'refs/heads/main'
    concurrency: deploy-prod
    runs-on: ubuntu-20.04
    steps:
      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: ${{ secrets.SSH_KNOWN_HOSTS }}
      - name: Download static files
        uses: actions/download-artifact@v2
        with:
          name: staticfiles
      - name: Transfer static files
        run: scp staticfiles.tar ${{secrets.SSH_USER}}@${{ secrets.SSH_HOST }}:/apps/choralcat
      # The following step must be commented out when setting up the CI/CD in order
      # to bootstrap the process, since the initial repo might not have the deploy
      # script.
      - name: Run deploy script on host
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: /apps/choralcat/deploy.sh ${{ github.sha }}
      - run: echo 'ðŸ¥³ Deploy complete!'
      - name: Send deploy email
        uses: dawidd6/action-send-mail@v3.6.0
        with:
          server_address: ${{ secrets.EMAIL_SERVER }}
          server_port: ${{ secrets.EMAIL_PORT }}
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          secure: true
          to: equal.year8534@fastmail.com
          from:  GitHub Action - deploy
          subject: New deploy for ${{ github.repository }}
          body: Deploy successful for ${{ github.repository }}, deployed commit ${{ github.sha }}
